package com.leafpay.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlerteSecuriteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlerteSecuriteAllPropertiesEquals(AlerteSecurite expected, AlerteSecurite actual) {
        assertAlerteSecuriteAutoGeneratedPropertiesEquals(expected, actual);
        assertAlerteSecuriteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlerteSecuriteAllUpdatablePropertiesEquals(AlerteSecurite expected, AlerteSecurite actual) {
        assertAlerteSecuriteUpdatableFieldsEquals(expected, actual);
        assertAlerteSecuriteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlerteSecuriteAutoGeneratedPropertiesEquals(AlerteSecurite expected, AlerteSecurite actual) {
        assertThat(actual)
            .as("Verify AlerteSecurite auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlerteSecuriteUpdatableFieldsEquals(AlerteSecurite expected, AlerteSecurite actual) {
        assertThat(actual)
            .as("Verify AlerteSecurite relevant properties")
            .satisfies(a -> assertThat(a.getTypeAlerte()).as("check typeAlerte").isEqualTo(expected.getTypeAlerte()))
            .satisfies(a -> assertThat(a.getNiveauSeverite()).as("check niveauSeverite").isEqualTo(expected.getNiveauSeverite()))
            .satisfies(a -> assertThat(a.getTimestamp()).as("check timestamp").isEqualTo(expected.getTimestamp()))
            .satisfies(a -> assertThat(a.getEstTraitee()).as("check estTraitee").isEqualTo(expected.getEstTraitee()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlerteSecuriteUpdatableRelationshipsEquals(AlerteSecurite expected, AlerteSecurite actual) {
        assertThat(actual)
            .as("Verify AlerteSecurite relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
